<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etc.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.etc.entity.Orders" >
    <id column="deliveryId" property="deliveryid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="sendName" property="sendname" jdbcType="VARCHAR" />
    <result column="sendAdd" property="sendadd" jdbcType="VARCHAR" />
    <result column="sendDetailAdd" property="senddetailadd" jdbcType="VARCHAR" />
    <result column="sendPhone" property="sendphone" jdbcType="VARCHAR" />
    <result column="sendPostcode" property="sendpostcode" jdbcType="VARCHAR" />
    <result column="acceptName" property="acceptname" jdbcType="VARCHAR" />
    <result column="acceptAdd" property="acceptadd" jdbcType="VARCHAR" />
    <result column="acceptDetailAdd" property="acceptdetailadd" jdbcType="VARCHAR" />
    <result column="acceptPhone" property="acceptphone" jdbcType="VARCHAR" />
    <result column="acceptPostcode" property="acceptpostcode" jdbcType="VARCHAR" />
    <result column="isInsurance" property="isinsurance" jdbcType="VARCHAR" />
    <result column="insurancePrice" property="insuranceprice" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="transportation" property="transportation" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    deliveryId, userId, sendName, sendAdd, sendDetailAdd, sendPhone, sendPostcode, acceptName, 
    acceptAdd, acceptDetailAdd, acceptPhone, acceptPostcode, isInsurance, insurancePrice, 
    payment, money, weight, type, status, transportation
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.etc.entity.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where deliveryId = #{deliveryid,jdbcType=INTEGER}
  </select>
  
  
   <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where deliveryId = #{deliveryid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.etc.entity.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.etc.entity.Orders" >
   <!--  <selectKey resultType="java.lang.Integer" keyProperty="deliveryid" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey> -->
    insert into orders (deliveryId, userId, sendName, 
      sendAdd, sendDetailAdd, sendPhone, 
      sendPostcode, acceptName, acceptAdd, 
      acceptDetailAdd, acceptPhone, acceptPostcode, 
      isInsurance, insurancePrice, payment, 
      money, weight, type, status, 
      transportation)
    values (#{deliveryid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sendname,jdbcType=VARCHAR}, 
      #{sendadd,jdbcType=VARCHAR}, #{senddetailadd,jdbcType=VARCHAR}, #{sendphone,jdbcType=VARCHAR}, 
      #{sendpostcode,jdbcType=VARCHAR}, #{acceptname,jdbcType=VARCHAR}, #{acceptadd,jdbcType=VARCHAR}, 
      #{acceptdetailadd,jdbcType=VARCHAR}, #{acceptphone,jdbcType=VARCHAR}, #{acceptpostcode,jdbcType=VARCHAR}, 
      #{isinsurance,jdbcType=VARCHAR}, #{insuranceprice,jdbcType=INTEGER}, #{payment,jdbcType=INTEGER}, 
      #{money,jdbcType=INTEGER}, #{weight,jdbcType=REAL}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{transportation,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.etc.entity.Orders" >
    <selectKey resultType="java.lang.Integer" keyProperty="deliveryid" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      deliveryId,
      <if test="userid != null" >
        userId,
      </if>
      <if test="sendname != null" >
        sendName,
      </if>
      <if test="sendadd != null" >
        sendAdd,
      </if>
      <if test="senddetailadd != null" >
        sendDetailAdd,
      </if>
      <if test="sendphone != null" >
        sendPhone,
      </if>
      <if test="sendpostcode != null" >
        sendPostcode,
      </if>
      <if test="acceptname != null" >
        acceptName,
      </if>
      <if test="acceptadd != null" >
        acceptAdd,
      </if>
      <if test="acceptdetailadd != null" >
        acceptDetailAdd,
      </if>
      <if test="acceptphone != null" >
        acceptPhone,
      </if>
      <if test="acceptpostcode != null" >
        acceptPostcode,
      </if>
      <if test="isinsurance != null" >
        isInsurance,
      </if>
      <if test="insuranceprice != null" >
        insurancePrice,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="transportation != null" >
        transportation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{deliveryid,jdbcType=INTEGER},
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sendname != null" >
        #{sendname,jdbcType=VARCHAR},
      </if>
      <if test="sendadd != null" >
        #{sendadd,jdbcType=VARCHAR},
      </if>
      <if test="senddetailadd != null" >
        #{senddetailadd,jdbcType=VARCHAR},
      </if>
      <if test="sendphone != null" >
        #{sendphone,jdbcType=VARCHAR},
      </if>
      <if test="sendpostcode != null" >
        #{sendpostcode,jdbcType=VARCHAR},
      </if>
      <if test="acceptname != null" >
        #{acceptname,jdbcType=VARCHAR},
      </if>
      <if test="acceptadd != null" >
        #{acceptadd,jdbcType=VARCHAR},
      </if>
      <if test="acceptdetailadd != null" >
        #{acceptdetailadd,jdbcType=VARCHAR},
      </if>
      <if test="acceptphone != null" >
        #{acceptphone,jdbcType=VARCHAR},
      </if>
      <if test="acceptpostcode != null" >
        #{acceptpostcode,jdbcType=VARCHAR},
      </if>
      <if test="isinsurance != null" >
        #{isinsurance,jdbcType=VARCHAR},
      </if>
      <if test="insuranceprice != null" >
        #{insuranceprice,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=REAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="transportation != null" >
        #{transportation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.etc.entity.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.deliveryid != null" >
        deliveryId = #{record.deliveryid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sendname != null" >
        sendName = #{record.sendname,jdbcType=VARCHAR},
      </if>
      <if test="record.sendadd != null" >
        sendAdd = #{record.sendadd,jdbcType=VARCHAR},
      </if>
      <if test="record.senddetailadd != null" >
        sendDetailAdd = #{record.senddetailadd,jdbcType=VARCHAR},
      </if>
      <if test="record.sendphone != null" >
        sendPhone = #{record.sendphone,jdbcType=VARCHAR},
      </if>
      <if test="record.sendpostcode != null" >
        sendPostcode = #{record.sendpostcode,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptname != null" >
        acceptName = #{record.acceptname,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptadd != null" >
        acceptAdd = #{record.acceptadd,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptdetailadd != null" >
        acceptDetailAdd = #{record.acceptdetailadd,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptphone != null" >
        acceptPhone = #{record.acceptphone,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptpostcode != null" >
        acceptPostcode = #{record.acceptpostcode,jdbcType=VARCHAR},
      </if>
      <if test="record.isinsurance != null" >
        isInsurance = #{record.isinsurance,jdbcType=VARCHAR},
      </if>
      <if test="record.insuranceprice != null" >
        insurancePrice = #{record.insuranceprice,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=REAL},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.transportation != null" >
        transportation = #{record.transportation,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set deliveryId = #{record.deliveryid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      sendName = #{record.sendname,jdbcType=VARCHAR},
      sendAdd = #{record.sendadd,jdbcType=VARCHAR},
      sendDetailAdd = #{record.senddetailadd,jdbcType=VARCHAR},
      sendPhone = #{record.sendphone,jdbcType=VARCHAR},
      sendPostcode = #{record.sendpostcode,jdbcType=VARCHAR},
      acceptName = #{record.acceptname,jdbcType=VARCHAR},
      acceptAdd = #{record.acceptadd,jdbcType=VARCHAR},
      acceptDetailAdd = #{record.acceptdetailadd,jdbcType=VARCHAR},
      acceptPhone = #{record.acceptphone,jdbcType=VARCHAR},
      acceptPostcode = #{record.acceptpostcode,jdbcType=VARCHAR},
      isInsurance = #{record.isinsurance,jdbcType=VARCHAR},
      insurancePrice = #{record.insuranceprice,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=REAL},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      transportation = #{record.transportation,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.etc.entity.Orders" >
    update orders
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sendname != null" >
        sendName = #{sendname,jdbcType=VARCHAR},
      </if>
      <if test="sendadd != null" >
        sendAdd = #{sendadd,jdbcType=VARCHAR},
      </if>
      <if test="senddetailadd != null" >
        sendDetailAdd = #{senddetailadd,jdbcType=VARCHAR},
      </if>
      <if test="sendphone != null" >
        sendPhone = #{sendphone,jdbcType=VARCHAR},
      </if>
      <if test="sendpostcode != null" >
        sendPostcode = #{sendpostcode,jdbcType=VARCHAR},
      </if>
      <if test="acceptname != null" >
        acceptName = #{acceptname,jdbcType=VARCHAR},
      </if>
      <if test="acceptadd != null" >
        acceptAdd = #{acceptadd,jdbcType=VARCHAR},
      </if>
      <if test="acceptdetailadd != null" >
        acceptDetailAdd = #{acceptdetailadd,jdbcType=VARCHAR},
      </if>
      <if test="acceptphone != null" >
        acceptPhone = #{acceptphone,jdbcType=VARCHAR},
      </if>
      <if test="acceptpostcode != null" >
        acceptPostcode = #{acceptpostcode,jdbcType=VARCHAR},
      </if>
      <if test="isinsurance != null" >
        isInsurance = #{isinsurance,jdbcType=VARCHAR},
      </if>
      <if test="insuranceprice != null" >
        insurancePrice = #{insuranceprice,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=REAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="transportation != null" >
        transportation = #{transportation,jdbcType=INTEGER},
      </if>
    </set>
    where deliveryId = #{deliveryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etc.entity.Orders" >
    update orders
    set userId = #{userid,jdbcType=INTEGER},
      sendName = #{sendname,jdbcType=VARCHAR},
      sendAdd = #{sendadd,jdbcType=VARCHAR},
      sendDetailAdd = #{senddetailadd,jdbcType=VARCHAR},
      sendPhone = #{sendphone,jdbcType=VARCHAR},
      sendPostcode = #{sendpostcode,jdbcType=VARCHAR},
      acceptName = #{acceptname,jdbcType=VARCHAR},
      acceptAdd = #{acceptadd,jdbcType=VARCHAR},
      acceptDetailAdd = #{acceptdetailadd,jdbcType=VARCHAR},
      acceptPhone = #{acceptphone,jdbcType=VARCHAR},
      acceptPostcode = #{acceptpostcode,jdbcType=VARCHAR},
      isInsurance = #{isinsurance,jdbcType=VARCHAR},
      insurancePrice = #{insuranceprice,jdbcType=INTEGER},
      payment = #{payment,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      weight = #{weight,jdbcType=REAL},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      transportation = #{transportation,jdbcType=INTEGER}
    where deliveryId = #{deliveryid,jdbcType=INTEGER}
  </update>
  <update id="updatemap">
  	update orders
  	set orders.status = orders.status + 1 where deliveryId = #{deliveryid}
  </update>
</mapper>